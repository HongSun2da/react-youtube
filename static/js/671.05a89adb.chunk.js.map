{"version":3,"file":"static/js/671.05a89adb.chunk.js","mappings":"+LAGA,MA2BA,EA3BoBA,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,OACIE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKH,EAAOI,KAAI,CAACC,EAAOC,KAChBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOL,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,0BAAyBL,UACpCF,EAAAA,EAAAA,KAACQ,EAAAA,KAAI,CACDC,GAAI,UAAUL,EAAMM,GAAGC,UACvBC,MAAO,CAAEC,gBAAiB,OAAOT,EAAMU,QAAQC,WAAWC,KAAKC,aAGvEX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaL,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,QAAOL,UAClBF,EAAAA,EAAAA,KAACQ,EAAAA,KAAI,CAACC,GAAI,UAAUL,EAAMM,GAAGC,UAAUT,SAAEE,EAAMU,QAAQI,WAE3DlB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,OAAML,UACjBF,EAAAA,EAAAA,KAAA,QAAMO,UAAU,SAAQL,UACpBF,EAAAA,EAAAA,KAACQ,EAAAA,KAAI,CAACC,GAAI,YAAYL,EAAMU,QAAQK,YAAYjB,SAAEE,EAAMU,QAAQM,wBAbpDf,MAmBjC,E,cCnBX,MAqDA,EArDegB,KACX,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACbxB,EAAQyB,IAAcC,EAAAA,EAAAA,UAAS,KAC/BC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,OAC5CG,EAASC,IAAeJ,EAAAA,EAAAA,WAAS,IAEzCK,EAAAA,EAAAA,YAAU,KACNN,EAAU,IACVO,EAAYT,GACZO,GAAW,EAAK,GACjB,CAACP,IAEJ,MAAMS,EAAc,SAACC,GAA2B,IAApBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACpCG,EAAAA,EAAAA,GAAa,oCAAoCL,eAAmBC,KAC/DK,MAAMC,IACHZ,EAAiBY,EAAKb,eACtBF,GAAWgB,GAAc,IAAIA,KAAcD,EAAKE,SAChDZ,GAAW,EAAM,IAEpBa,OAAOC,IACJC,QAAQC,IAAI,sBAAuBF,GACnCd,GAAW,EAAM,GAE7B,EAQMiB,EAAkBlB,EAAU,YAAc,WAEhD,OACI5B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CACD7B,MAAQ,kCACR8B,YAAY,qFAAmB9C,UAE/BI,EAAAA,EAAAA,MAAA,WAASI,GAAG,aAAaH,UAAWuC,EAAgB5C,SAAA,EAChDI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAI,iBAAGF,EAAAA,EAAAA,KAAA,MAAAE,SAAKoB,IAAc,oDAC1BtB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,sBAAqBL,UAChCF,EAAAA,EAAAA,KAACiD,EAAW,CAAClD,OAAQA,OAEzBC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAaL,SACvBwB,IACG1B,EAAAA,EAAAA,KAAA,UAAQkD,QApBLC,KAChBzB,GACCK,EAAYT,EAAUI,EAC1B,EAiBgDxB,SAAC,8BAI1C,C,gDCtDR,MAEDkD,EAAU,CACdC,OAAQ,CACNC,WAAY,MAEdC,QAAS,CACP,iBAAkBC,qDAClB,kBAAmB,+BAIVnB,EAAeoB,UACxB,IACI,MAAM,KAAElB,SAAemB,EAAAA,EAAMC,IAAI,sCAAe1C,IAAOmC,GAEvD,OADAR,QAAQC,IAAIN,GACLA,CACX,CAAE,MAAMI,GACJC,QAAQD,MAAMA,EAClB,E","sources":["components/videos/VideoSearch.jsx","pages/Search.jsx","utils/api.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst VideoSearch = ({ videos }) => {\r\n    return (\r\n        <>\r\n            {videos.map((video, index) => (\r\n                <div className=\"video\" key={index}>\r\n                    <div className=\"video__thumb play__icon\">\r\n                        <Link \r\n                            to={`/video/${video.id.videoId}`} \r\n                            style={{ backgroundImage: `url(${video.snippet.thumbnails.high.url})` }}>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"video__info\">\r\n                        <div className=\"title\">\r\n                            <Link to={`/video/${video.id.videoId}`}>{video.snippet.title}</Link>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <span className=\"author\">\r\n                                <Link to={`/channel/${video.snippet.channelId}`}>{video.snippet.channelTitle}</Link>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoSearch","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Main from '../components/section/Main'\r\n\r\nimport VideoSearch from '../components/videos/VideoSearch'\r\nimport { fetchFromAPI } from '../utils/api'\r\n\r\nconst Search = () => {\r\n    const { searchId } = useParams();\r\n    const [ videos, setVideos ] = useState([]);\r\n    const [ nextPageToken, setNextPageToken] = useState(null);\r\n    const [ loading, setLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setVideos([]);\r\n        fetchVidoes(searchId);\r\n        setLoading(true);\r\n    }, [searchId]);\r\n\r\n    const fetchVidoes = (query, pageToken = '') => {\r\n        fetchFromAPI(`search?part=snippet&type=video&q=${query}&pageToken=${pageToken}`)\r\n            .then((data) => {\r\n                setNextPageToken(data.nextPageToken);\r\n                setVideos((preVideos) => [...preVideos, ...data.items]);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error fetching data', error);\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    const handleLoadMore = () => {\r\n        if(nextPageToken){\r\n            fetchVidoes(searchId, nextPageToken);\r\n        }\r\n    }\r\n\r\n    const searchPageClass = loading ? 'isLoading' : 'isLoaded';\r\n\r\n    return (\r\n        <Main \r\n            title = \"Ïú†Ìà¨Î∏å Í≤ÄÏÉâ\"\r\n            description=\"Ïú†ÌäúÎ∏å Í≤ÄÏÉâ Í≤∞Í≥º ÌéòÏù¥ÏßÄÏûÖÎãàÎã§.\">\r\n            \r\n            <section id='searchPage' className={searchPageClass}>\r\n                <h2>ü§† <em>{searchId}</em> Í≤ÄÏÉâ Í≤∞Í≥ºÏûÖÎãàÎã§.</h2>\r\n                <div className=\"video__inner search\">\r\n                    <VideoSearch videos={videos} />\r\n                </div>\r\n                <div className='video__more'>\r\n                    {nextPageToken && (\r\n                        <button onClick={handleLoadMore}>Îçî Î≥¥Í∏∞</button>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default Search","import axios from 'axios';\r\n\r\nexport const BASE_URL = 'https://youtube-v31.p.rapidapi.com';\r\n\r\nconst options = {\r\n  params: {\r\n    maxResults: '48'\r\n  },\r\n  headers: {\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY,\r\n    'x-rapidapi-host': 'youtube-v31.p.rapidapi.com'\r\n  }\r\n};\r\n\r\nexport const fetchFromAPI = async(url) => {\r\n    try{\r\n        const { data } = await axios.get(`${BASE_URL}/${url}`, options);\r\n        console.log(data);\r\n        return data;\r\n    } catch(error){\r\n        console.error(error);\r\n    }\r\n}\r\n"],"names":["_ref","videos","_jsx","_Fragment","children","map","video","index","_jsxs","className","Link","to","id","videoId","style","backgroundImage","snippet","thumbnails","high","url","title","channelId","channelTitle","Search","searchId","useParams","setVideos","useState","nextPageToken","setNextPageToken","loading","setLoading","useEffect","fetchVidoes","query","pageToken","arguments","length","undefined","fetchFromAPI","then","data","preVideos","items","catch","error","console","log","searchPageClass","Main","description","VideoSearch","onClick","handleLoadMore","options","params","maxResults","headers","process","async","axios","get"],"sourceRoot":""}